/*
**	cnorm advanced generation templates
**	made by Lionel Auroux for cnorm  >= 2.6
**
*/

function	cnorm2cCtype<T>(ctype : node)
{
  traceLine("Unkown node Ctype:" + T);
  traceLine("Must be implemented");
  exit(1);
}

function	cnorm2cCtype<"">(ctype : node)
{
  traceLine("Empty node Ctype.type");
  traceObject(ctype);
  exit(1);
}

// type C primitif
function	cnorm2cCtype<"__PRIMARY__">(ctype : node)
{
  local list;
  pushItem list = cnorm2cInfoAndSign(ctype);
  pushItem list = ctype.identifier;
  pushItem list = cnorm2cPointer(ctype);
  return _joinString(list, " ");
}

// struct, union, enum
function	cnorm2cCtype<"__COMPOSED__">(ctype : node)
{
  local list;
  pushItem list = cnorm2cInfoAndSign(ctype);
  pushItem list = ctype.specifier + _joinString(ctype.comment_struct, " ");
  pushItem list = ctype.identifier;
  pushItem list = cnorm2cListEnumUnionStruct(ctype);
  pushItem list = cnorm2cPointer(ctype);  
  return _joinString(list, " ");
}

// pointeur de fonction
function	cnorm2cCtype<"__PFUNCTION__">(ctype : node)
{
  local list;
  pushItem list = cnorm2cInfoAndSign(ctype);
  pushItem list = ctype.specifier;
  pushItem list = ctype.identifier; 
  pushItem list = cnorm2cListEnumUnionStruct(ctype);
  pushItem list = cnorm2cPointer(ctype);
  return _joinString(list, " ");
}

// bitfield dans les structures
function	cnorm2cCtype<"__BITFIELD__">(ctype : node)
{
  local list;
  pushItem list = cnorm2cInfoAndSign(ctype);
  pushItem list = ctype.identifier;
  pushItem list = cnorm2cPointer(ctype);
  return _joinString(list, " ");
}

// bitfield dans les structures
function	cnorm2cCtype<"__TYPEOF__">(ctype : node)
{
  local sContent;
  if (ctype.etype == "typename")
    {sContent = cnorm2cOtype<"typecast">(ctype);}
  if (ctype.etype == "expression")
    {sContent = cnorm2cExprStmt(ctype);}
  return "typeof (" + sContent + ")";
}
