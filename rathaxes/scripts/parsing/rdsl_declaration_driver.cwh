/*
**	driver.cwh in scripts/parsing
**	for Rathaxes project
**	made by Adrien
**	modified by Thor
** -----------------------------------------------------------------------------
**	TODO:
**		- Changer le semantic block par le scope courrant ou est declarer
**		la variable.
*/

#include "rdsl_declaration_driver.cwf"

//driverDefinition(devices : node) ::= 
//    => local syntaxError;
//	#readIdentifier:{"DRIVER"}
//    #continue(syntaxError, rtxCraftError("operating system identifier expected."))
//    [
//        #readIdentifier:sDeviceId
//		#readIdentifier:{"ON"}
//		#readIdentifier:sOperatingSystem
//    ]
//	=> {
//	       if (!existVariable(devices[sDeviceId]))
//	       { 
//			   rtxError("device '" + sDeviceId + "' doesn't exist.");
//		   }
//	       insert devices[sDeviceId].drivers[sOperatingSystem];
//	   }
//	driverBlock(devices[sDeviceId])
//;

driverDefinition(nDriver : node) ::= 
    => local syntaxError;
	#readIdentifier:{"DRIVER"}
    #continue(syntaxError, rtxCraftError("operating system identifier expected."))
	#readIdentifier:sDriverName
	=>
	{
		insert nDriver.name = sDriverName;
	}
	driverBlock(nDriver)
;

driverBlock(nDriver : node) ::=
    => local syntaxError;
    #continue(syntaxError, rtxCraftError("DRIVER definition block expected."))
	[
		'{'
		[
			attached_devices(nDriver)
			| rdsl_declaration_variables(nDriver.globals)
		]*
		'}'[';']?
	]
;

attached_devices(nDriver : node) ::=
	#readIdentifier:{"DEVICES"}
	=> devicesVariablekAlreadyExists(nDriver);
	'='
	[
		#readIdentifier:sDevice
		=> map_device_to_driver(nDriver, this.devices, sDevice);
		[
			',' #readIdentifier:sDevice
			=> map_device_to_driver(nDriver, this.devices, sDevice);
		]*
	]
	';'
;
