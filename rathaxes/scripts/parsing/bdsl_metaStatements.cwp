/*
**      bdsl_metaStatements.cwp in script/parsing
**      for Rathaxes project
**      made by Thor
*/


metaStatement(theChunk : node) ::= 
        #readIdentifier:theBuiltIn
        "("
	    [
              #pushItem(theChunk#back.list)
              #readCString:theChunk#back.list#back
	    ]?
	    [
	      "," #pushItem(theChunk#back.list)
	      #readCString:theChunk#back.list#back
	    ]*
	")" ";"
	=> {
	     set theChunk#back = "_META_";
	     insert theChunk#back.type = "call_expression";
	     insert theChunk#back.otype = "call";
	     insert theChunk#back.etype = "expression";
	     // THE FUCK BEGINS HERE
	     local fields;
	     
	     foreach statement in theChunk
	     {
	       if (statement = "_C_CODE_")
		 {
		   cnormPatchGetStructList(statement, theChunk#back.list[0], fields);
		   cnormPatchStructOrUnionFieldFront(fields, theChunk#back.list[1]);
		   //traceObject(fields, 2);
		 }
	     }
	     // THEN ENDS THERE...
	}
;

// C expression types
builtInMetaCall<"cnormPatchDeclaration">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchStatement">(theChunk : node) ::=
  =>print("prout");
;

// C functions
builtInMetaCall<"cnormPatchGetFunctionNode">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchGetFunctionParamList">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchGetProtoParamList">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchFunctionParamFront">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchFunctionParamBack">(theChunk : node) ::=
  =>print("prout");
;

// C structs/unions/enums
builtInMetaCall<"cnormPatchGetStructList">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchGetUnionList">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchStructOrUnionFieldFront">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchStructOrUnionFieldBack">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchGetEnumList">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchEnumFieldFront">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormPatchEnumFieldBack">(theChunk : node) ::=
  =>print("prout");
;

// C types
builtInMetaCall<"cnormAddToGlobalTypes">(theChunk : node) ::=
  =>print("prout");
;

builtInMetaCall<"cnormAddRefToGlobalTypes">(theChunk : node) ::=
  =>print("prout");
;

// Error
builtInMetaCall<T>(theChunk : node) ::=
  => rtxError("Unknown built in meta-call \"" + T + "\"");
;
