<%

/*
**      _device_add.blt in black_library/windows/devices/
**      for Rathaxes project
**      made by Micka
*/

local	sDriverName = this.name;
local   sDispatchMode = this.configuration["RKM"]["DISPATCH_MODE"];
%>

ADVICE device_add PART_OF devices
{
    NTSTATUS
    EvtDeviceAdd(WDFDRIVER Driver, PWDFDEVICE_INIT DeviceInit)
    {
        NTSTATUS                status;
        WDFDEVICE               device;
        WDFQUEUE                defaultqueue;
        WDF_IO_QUEUE_CONFIG     defaultconfig;
        
        // Registering plug and play callbacks
        WDF_PNPPOWER_EVENT_CALLBACKS pnpPowerCallbacks;
        WDF_PNPPOWER_EVENT_CALLBACKS_INIT(&pnpPowerCallbacks);
        pnpPowerCallbacks.EvtDevicePrepareHardware = @sDriverName@_on_plug;
        WdfDeviceInitSetPnpPowerEventCallbacks(DeviceInit, &pnpPowerCallbacks);

        status = WdfDeviceCreate(&DeviceInit, WDF_NO_OBJECT_ATTRIBUTES, &device);
        if (!NT_SUCCESS(status))
        {
            KdPrint(("@sDriverName@" "WdfDeviceCreate failed\n"));
            return (status);
        }
        WDF_IO_QUEUE_CONFIG_INIT_DEFAULT_QUEUE(&defaultconfig, @sDispatchMode@);
        defaultconfig.EvtIoRead       = @sDriverName@IoRead;
        defaultconfig.EvtIoWrite      = @sDriverName@IoWrite;
		
        status = WdfIoQueueCreate(device, &defaultconfig, WDF_NO_OBJECT_ATTRIBUTES, &defaultqueue);
        if (!NT_SUCCESS(status))
        {
            KdPrint(("@sDriverName@" "WdfIoQueueCreate failed\n"));
        }
		status = WdfDeviceCreateDeviceInterface(device, &GUID_DEVINTERFACE_RATHAXES_SERIAL, NULL);
        return (status);
    }
};
