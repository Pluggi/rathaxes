<%
/*
**	_sequences.blt in black_library/linux/
**  for Rathaxes project
**  made by Thor
**	modified by Christophe Fajardo Y Romera
** -----------------------------------------------------------------------------
**  ["seq_rs232"]
**      |--+
**          name = "seq_rs232"
**          block
**              |--+
**                  functions // array of sequences.
**                      ["my_sequence"] = -> 'project.functions["5"]'
**                          |--+
**                              name = "my_sequence"
**                              parameters
**                                  ["0"]
**                                      |--+
**                                          rtype = "DWORD"
**                                          name = "in"
**                                  ["1"]
**                                      |--+
**                                          rtype = "DWORD"
**                                          name = "out"
**                                  ["2"]
**                                      |--+
**                                          rtype = "BIT"
**                                          name = "fail"
**                              rgl_pctx // global pointer.
**                              locals // Local variables.
**                                  ["temp"]
**                                      |--+
**                                          name = "temp"
**                                          rtype = "DWORD"
**                                          size = "13"
**                                          operator = "[]"
**                                  ["mais"]
**                                      |--+
**                                          name = "mais"
**                                          rtype = "DWORD"
**                                          size = "16"
**                                          operator = "[]"
**                                  ["fait"]
**                                      |--+
**                                          name = "fait"
**                                          rtype = "DWORD"
**                                          size = "10"
**                                          operator = "[]"
**                              block
**                                  ["0"]
**                                      |--+
**                                          rtype = "algorithms"
**                                          algorithm = "log"
**                                          first_parameter
*/
local sDriverName = this.name;
%>

ADVICE sequences PART_OF sequences
{
    <%
		foreach sequence in this.sequences
    	{
            foreach fct in sequence.block.functions
            {
                %>
                    void @sDriverName@_@sequence.name@_@fct.name@(
                <%
                    foreach parameter in fct.parameters
                    {
                        if (parameter.key() > 0)
                        {
                            %>, <%
                        }
                        if (parameter.rtype == "BUFFER")
                        {
                            %> signed char *@parameter.pointerName@, size_t size_@parameter.sizeName@, loff_t * offset_@parameter.offsetName@ <%
                        }
                        else
                        {
                            %>
                                @parameter.rtype@ @parameter.name@
                            <%
                        }
                    }
                %>
                )
                {
                    <%
                    // Local declration.
                    foreach declaration in fct.locals
                    {
                        if (declaration.rtype == "buffer")
                        {
                            %>
                            signed char*    @declaration.pointerName@;
                            size_t          @declaration.sizeName@;
                            loff_t*         @declaration.offsetName@;
                            <%
                            // We need to allocate the local buffer on the heap.
                            // Here put alocation code.
                        }
                        else
                        {
                            %>
                            @declaration.rtype@ @declaration.name@;
                            <%
                        }
                    }
                    %>
                    <%
                    // call to algorithm template.
                    local sToken = getContextToken(fct.block);
			        %>
                        JOINPOINT algorithms (@sToken@) IN algorithms.algorithms;
                }
                <%
                
            }
    	}
    %>
};
