// This is OpenBSD implemetation of getCMD function.

declare function	getCMD<"openBSD">(file : value, outputFile : value);

/*
 * This function get all arguments of cpp command line.
 */
function	parseOpenCMD()
{
	local	configNode;
	local	args;
	local	outputFile = "grepOutputOPenBSD";

	system("egrep -E \"^IDENT|^PARAM|^CPPFLAGS|^INCLUDES\" " + OPENBSD_MAKEFILE_PATH + "/Makefile > " + outputFile);

	translate("parseOpenCMD.cwp", configNode, outputFile, outputFile + ".out");
	args = loadFile(outputFile + ".out");
	deleteFile(outputFile + ".out");

	// Now we have to replace $S with source path
	//args = replaceString("$S", OPENBSD_SOURCE_PATH, args);
	args = replaceString("$S", "/usr/include", args);

	return args;
}

/*
 * this function get the OpenBSD cpp command line with externals define
 * passed to gcc.
 * ----------------------------------------------------------------------------
 * WARN this function is executed inside /tmp directory so don't bother about
 * junk files.
 * ----------------------------------------------------------------------------
 */
function	getCMD<"openBSD">(file : value, outputFile : value)
{
	local	cmd;
	local	args;

	args = parseOpenCMD();
	deleteFile(outputFile);

	//cmd = "cpp" + args + " -include " + file + " > " + outputFile;
	cmd = "cpp -D_KERNEL -I/sys " + file + " > " + outputFile;

	//traceLine(cmd);
	return cmd;
}
